#jinja2: trim_blocks: False
#jinja2: lstrip_blocks: True
upstream {{ host }}_server {
    server unix:/home/{{ ansible_ssh_user }}/gunicorn-{{ host }}.socket fail_timeout=0;
}

server {
    listen 443 ssl;

    # Enable gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied    any;
    gzip_vary       on;

    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    root /home/{{ ansible_ssh_user }}/{{ host }};
    index index.html index.htm;

    client_max_body_size 4G;
    server_name {{ host }};

    keepalive_timeout 70;

    # Location of media files
    location /media  {
        alias /home/{{ ansible_ssh_user }}/{{ host }}/media;
    }

    # Location of static files
    location /static {
        alias /home/{{ ansible_ssh_user }}/{{ host }}/static;
    }

    # Expires headers to allow browsers to cache some static files
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public";
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_buffering off;

        proxy_pass http://{{ host }}_server;

        {% if 'staging' in group_names %}
        # Password protection for staging server
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        {% endif %}
    }

}
