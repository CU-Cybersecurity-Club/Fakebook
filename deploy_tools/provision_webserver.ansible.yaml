---
- name: web server provisioning playbook
  hosts: webserver
  remote_user: "{{ ansible_ssh_user }}"

  tasks:
  - name: install packages
    apt:
      force: yes
      pkg: nginx,git,python3,python3-venv,software-properties-common
    become: yes

  # nginx configuration
  - name: add nginx.conf to /etc/nginx
    become: yes
    template:
      src: ./config/nginx.conf.j2
      dest: /etc/nginx/nginx.conf

  - name: add nginx server config to nginx sites-available
    become: yes
    template:
      src: ./config/webserver.nginx.j2
      dest: /etc/nginx/sites-available/{{ host }}
    notify:
      - restart nginx

  - name: add symlink to nginx sites-enabled
    become: yes
    file:
      src: /etc/nginx/sites-available/{{ host }}
      dest: /etc/nginx/sites-enabled/{{ host }}
      state: link
    notify:
      - restart nginx

  # Configure gunicorn
  - name: install gunicorn service
    become: yes
    template:
      src: ./config/gunicorn.service.j2
      dest: /etc/systemd/system/gunicorn-{{ host }}.service
    notify:
      - restart gunicorn

  - name: make gunicorn start on boot
    become: yes
    service:
      name: gunicorn-{{ host }}
      enabled: yes

  # Update code and configuration from repository
  - name: download code from repository
    git:
      repo: "{{ repo }}"
      dest: "{{ site_directory }}"
      version: "{{ branch | default('HEAD') }}"
      force: yes
      key_file: /home/{{ ansible_ssh_user }}/.ssh/deploy_keys

  - name: update Python virtual environment
    become_user: {{ ansible_ssh_user }}
    pip:
      virtualenv: "{{ site_directory }}/virtualenv"
      virtualenv_python: python3.6
      requirements: "{{ site_directory }}/requirements.txt"

  - name: add .env config file
    template:
      src: ./config/webserver.env.j2
      dest: "{{ site_directory }}/.env"
    notify:
      - restart gunicorn

  # Install certbot for use with Let's Encrypt
  - name: add certbot apt repository
    become: yes
    apt_repository:
      repo: ppa:certbot/certbot
      state: present

  - name: download certbot packages for use with nginx
    become: yes
    apt:
      force: yes
      pkg: certbot,python-certbot-nginx

  handlers:
  - name: restart nginx
    become: yes
    service:
      name: nginx
      state: restarted

  - name: restart gunicorn
    become: yes
    systemd:
      name: gunicorn-{{ host }}
      daemon_reload: yes
      enabled: yes
      state: restarted
...
